name: Build

on:
  push:
  workflow_dispatch:
    inputs:
      publish_github:
        type: boolean
        description: Publish to GitHub Packages
        required: false
        default: false
      publish_nuget:
        type: boolean
        description: Publish to nuget.org
        required: false
        default: false

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Restore dotnet tools
      run: dotnet tool restore

    - name: Restore dependencies MessagePack.MSBuild.SourceGenerator.Tasks.sln
      run: dotnet restore MessagePack.MSBuild.SourceGenerator.Tasks.sln

    - name: Format Check MessagePack.MSBuild.SourceGenerator.Tasks.sln
      run: dotnet format MessagePack.MSBuild.SourceGenerator.Tasks.sln --no-restore --verify-no-changes

    - name: Build MessagePack.MSBuild.SourceGenerator.Tasks.sln
      run: dotnet build MessagePack.MSBuild.SourceGenerator.Tasks.sln --no-restore -c Release

    - name: Pack MessagePack.MSBuild.SourceGenerator.Tasks.sln
      run: dotnet pack MessagePack.MSBuild.SourceGenerator.Tasks.sln --no-build -c Release

    - name: Restore dependencies Sample.sln
      run: dotnet restore Sample.sln

    - name: Format Check Sample.sln
      run: dotnet format Sample.sln --no-restore --verify-no-changes

    - name: Build Sample.sln
      run: dotnet build Sample.sln --no-restore -c Release

    - name : Test Sample.sln
      run: dotnet test Sample.sln --no-build -c Release -l "console;verbosity=detailed"

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nupkg
        path: nupkg/*.nupkg

    - name: NuGet add souce
      id: nuget_add_source
      if: inputs.publish_github
      run: dotnet nuget add source -u hikarin522 -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text -n "github" "https://nuget.pkg.github.com/hikarin522/index.json"

    - name: Publish GitHub Packages
      if: steps.nuget_add_source.conclusion == 'success'
      run: dotnet nuget push "nupkg/*.nupkg" -k ${{ secrets.GITHUB_TOKEN }} -s "github" --skip-duplicate

    - name: Publish NuGet
      if: inputs.publish_nuget
      run: dotnet nuget push "nupkg/*.nupkg" -k ${{ secrets.NUGET_OLG_API_KEY }} -s "nuget" --skip-duplicate
